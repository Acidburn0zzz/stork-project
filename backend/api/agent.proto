syntax = "proto3";

package agentapi;

service Agent {
  rpc getState(GetStateReq) returns (GetStateRsp) {}
  rpc restartKea(RestartKeaReq) returns (RestartKeaRsp) {}
}

message GetStateReq {
}

message GetStateRsp {
  string agentVersion = 1;
  repeated App apps = 2;
  string hostname = 3;
  int64 cpus = 4;
  string cpusLoad = 5;
  int64 memory = 6;
  int64 usedMemory = 7;
  int64 uptime = 8;
  string error = 9;
  string os = 10;
  string platform = 11;
  string platformFamily = 12;
  string platformVersion = 13;
  string kernelVersion = 14;
  string kernelArch = 15;
  string virtualizationSystem = 16;
  string virtualizationRole = 17;
  string hostID = 18;
}

message App {
  string version = 1;
  int64 ctrlPort = 2;
  bool active = 3;
  oneof app {
    AppKea kea = 4;
    AppBind bind = 5;
  }
}

message AppKea {
  string extendedVersion = 1;
  repeated KeaDaemon daemons = 2;
}

message KeaDaemon {
  int32 pid = 1;
  string name = 2;
  bool active = 3;
  string version = 4;
  string extendedVersion = 5;
}

message AppBind {
}

message RestartKeaReq {
  string xyz = 1;
}

message RestartKeaRsp {
  string xyz = 1;
}
