// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf-spec/agent.proto

package stork

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VersionParams struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionParams) Reset()         { *m = VersionParams{} }
func (m *VersionParams) String() string { return proto.CompactTextString(m) }
func (*VersionParams) ProtoMessage()    {}
func (*VersionParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_28e377add6ada602, []int{0}
}

func (m *VersionParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionParams.Unmarshal(m, b)
}
func (m *VersionParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionParams.Marshal(b, m, deterministic)
}
func (m *VersionParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionParams.Merge(m, src)
}
func (m *VersionParams) XXX_Size() int {
	return xxx_messageInfo_VersionParams.Size(m)
}
func (m *VersionParams) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionParams.DiscardUnknown(m)
}

var xxx_messageInfo_VersionParams proto.InternalMessageInfo

type StorkVersion struct {
	VersionText          string   `protobuf:"bytes,1,opt,name=versionText,proto3" json:"versionText,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StorkVersion) Reset()         { *m = StorkVersion{} }
func (m *StorkVersion) String() string { return proto.CompactTextString(m) }
func (*StorkVersion) ProtoMessage()    {}
func (*StorkVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_28e377add6ada602, []int{1}
}

func (m *StorkVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StorkVersion.Unmarshal(m, b)
}
func (m *StorkVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StorkVersion.Marshal(b, m, deterministic)
}
func (m *StorkVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorkVersion.Merge(m, src)
}
func (m *StorkVersion) XXX_Size() int {
	return xxx_messageInfo_StorkVersion.Size(m)
}
func (m *StorkVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_StorkVersion.DiscardUnknown(m)
}

var xxx_messageInfo_StorkVersion proto.InternalMessageInfo

func (m *StorkVersion) GetVersionText() string {
	if m != nil {
		return m.VersionText
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionParams)(nil), "stork.VersionParams")
	proto.RegisterType((*StorkVersion)(nil), "stork.StorkVersion")
}

func init() { proto.RegisterFile("api/protobuf-spec/agent.proto", fileDescriptor_28e377add6ada602) }

var fileDescriptor_28e377add6ada602 = []byte{
	// 143 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0x2c, 0xc8, 0xd4,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2d, 0x2e, 0x48, 0x4d, 0xd6, 0x4f, 0x4c,
	0x4f, 0xcd, 0x2b, 0xd1, 0x03, 0x8b, 0x09, 0xb1, 0x16, 0x97, 0xe4, 0x17, 0x65, 0x2b, 0xf1, 0x73,
	0xf1, 0x86, 0xa5, 0x16, 0x15, 0x67, 0xe6, 0xe7, 0x05, 0x24, 0x16, 0x25, 0xe6, 0x16, 0x2b, 0x19,
	0x70, 0xf1, 0x04, 0x83, 0x64, 0xa0, 0xa2, 0x42, 0x0a, 0x5c, 0xdc, 0x65, 0x10, 0x66, 0x48, 0x6a,
	0x45, 0x89, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0xb2, 0x90, 0x91, 0x3b, 0x17, 0x17, 0x58,
	0x87, 0x23, 0xc8, 0x74, 0x21, 0x4b, 0x2e, 0xae, 0xf4, 0xd4, 0x12, 0x98, 0x6e, 0x11, 0x3d, 0xb0,
	0x35, 0x7a, 0x28, 0x76, 0x48, 0x09, 0x43, 0x45, 0x91, 0x2d, 0x52, 0x62, 0x48, 0x62, 0x03, 0xbb,
	0xcc, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x92, 0xd9, 0x46, 0xa6, 0xba, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorkAgentClient is the client API for StorkAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorkAgentClient interface {
	GetVersion(ctx context.Context, in *VersionParams, opts ...grpc.CallOption) (*StorkVersion, error)
}

type storkAgentClient struct {
	cc *grpc.ClientConn
}

func NewStorkAgentClient(cc *grpc.ClientConn) StorkAgentClient {
	return &storkAgentClient{cc}
}

func (c *storkAgentClient) GetVersion(ctx context.Context, in *VersionParams, opts ...grpc.CallOption) (*StorkVersion, error) {
	out := new(StorkVersion)
	err := c.cc.Invoke(ctx, "/stork.StorkAgent/getVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorkAgentServer is the server API for StorkAgent service.
type StorkAgentServer interface {
	GetVersion(context.Context, *VersionParams) (*StorkVersion, error)
}

// UnimplementedStorkAgentServer can be embedded to have forward compatible implementations.
type UnimplementedStorkAgentServer struct {
}

func (*UnimplementedStorkAgentServer) GetVersion(ctx context.Context, req *VersionParams) (*StorkVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}

func RegisterStorkAgentServer(s *grpc.Server, srv StorkAgentServer) {
	s.RegisterService(&_StorkAgent_serviceDesc, srv)
}

func _StorkAgent_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorkAgentServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stork.StorkAgent/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorkAgentServer).GetVersion(ctx, req.(*VersionParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _StorkAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stork.StorkAgent",
	HandlerType: (*StorkAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getVersion",
			Handler:    _StorkAgent_GetVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/protobuf-spec/agent.proto",
}
